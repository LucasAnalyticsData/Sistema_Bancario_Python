# Constantes
LIMITE_SAQUES = 3
LIMITE_SAQUE_VALOR = 500
AGENCIA = "001"

# Variáveis globais
usuarios = []
contas_bancarias = []
numero_conta_sequencial = 1

# Funções
def exibir_menu():
    menu = """
    [d] Depositar
    [s] Sacar
    [e] Extrato
    [n] Novo usuário
    [c] Nova conta
    [q] Sair
    => """
    return input(menu).lower()

def cadastrar_usuario():
    cpf = input("Informe o CPF (somente números): ")
    for usuario in usuarios:
        if usuario['cpf'] == cpf:
            print("Usuário já cadastrado!")
            return
    
    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd/mm/aaaa): ")
    endereco = input("Informe o endereço (logradouro, nro - bairro - cidade/estado): ")
    
    usuarios.append({"nome": nome, "cpf": cpf, "data_nascimento": data_nascimento, "endereco": endereco})
    print("Usuário cadastrado com sucesso!")

def cadastrar_conta_bancaria():
    global numero_conta_sequencial
    cpf = input("Informe o CPF do usuário: ")
    
    usuario_encontrado = None
    for usuario in usuarios:
        if usuario['cpf'] == cpf:
            usuario_encontrado = usuario
            break
    
    if usuario_encontrado:
        nova_conta = {"agencia": AGENCIA, "numero_conta": numero_conta_sequencial, "usuario": usuario_encontrado}
        contas_bancarias.append(nova_conta)
        numero_conta_sequencial += 1
        print(f"Conta bancária {numero_conta_sequencial - 1} criada com sucesso!")
    else:
        print("Usuário não encontrado!")

# Função depósito (recebe argumentos por posição)
def depositar(saldo, valor, extrato):
    if valor > 0:
        saldo += valor
        extrato.append(f"Depósito: R$ {valor:.2f}")
        print(f"Depósito de R$ {valor:.2f} realizado com sucesso!")
    else:
        print("Operação falhou! O valor informado é inválido.")
    
    return saldo, extrato

# Função saque (recebe argumentos apenas por nome)
def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    if valor <= 0:
        print("Operação falhou! O valor informado é inválido.")
    elif valor > saldo:
        print("Operação falhou! Você não tem saldo suficiente.")
    elif valor > limite:
        print(f"Operação falhou! O valor do saque excede o limite de R$ {limite:.2f}.")
    elif numero_saques >= limite_saques:
        print(f"Operação falhou! Você já realizou {limite_saques} saques hoje.")
    else:
        saldo -= valor
        extrato.append(f"Saque: R$ {valor:.2f}")
        numero_saques += 1
        print(f"Saque de R$ {valor:.2f} realizado com sucesso!")
    
    return saldo, extrato

# Função extrato (recebe argumentos por posição e nome)
def exibir_extrato(saldo, *, extrato):
    print("\n================ EXTRATO ================")
    if extrato:
        for transacao in extrato:
            print(transacao)
    else:
        print("Não foram realizadas movimentações.")
    print(f"\nSaldo: R$ {saldo:.2f}")
    print("==========================================")

# Variáveis principais
saldo = 0
extrato = []
numero_saques = 0

# Loop principal
while True:
    opcao = exibir_menu()

    if opcao == 'd':
        valor_deposito = float(input("Informe o valor do depósito: "))
        saldo, extrato = depositar(saldo, valor_deposito, extrato)
    elif opcao == 's':
        valor_saque = float(input("Informe o valor do saque: "))
        saldo, extrato = sacar(saldo=saldo, valor=valor_saque, extrato=extrato, limite=LIMITE_SAQUE_VALOR, numero_saques=numero_saques, limite_saques=LIMITE_SAQUES)
    elif opcao == 'e':
        exibir_extrato(saldo, extrato=extrato)
    elif opcao == 'n':
        cadastrar_usuario()
    elif opcao == 'c':
        cadastrar_conta_bancaria()
    elif opcao == 'q':
        print("Saindo do sistema. Até logo!")
        break
    else:
        print("Operação inválida, por favor selecione novamente a operação desejada.")
